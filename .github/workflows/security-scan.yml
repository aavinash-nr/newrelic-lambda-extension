name: Security Scan

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev

permissions:
  contents: write      
  security-events: write
  pull-requests: write
  
jobs:
  scan-fs:
    name: Scan Go Dependencies (FS)
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23.7"
          cache-dependency-path: go.sum

      - name: Download Go modules
        run: go mod download

      - name: ðŸ›‘ Scan for vulnerabilities (Blocker)
        id: scan_blocker
        uses: aquasecurity/trivy-action@0.32.0
        with:
          scan-type: 'fs'
          scan-ref: '.'
          skip-dirs: 'examples' # Skips the examples folder
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'
          exit-code: 1
          ignore-unfixed: true
        continue-on-error: true

      - name: Generate report for PR comment
        if: steps.scan_blocker.outcome == 'failure'
        uses: aquasecurity/trivy-action@0.32.0
        with:
          scan-type: 'fs'
          scan-ref: '.'
          skip-dirs: 'examples' # Skips the examples folder
          format: 'table'
          output: 'trivy-comment-report.txt'
          severity: 'CRITICAL,HIGH'
          exit-code: 0
          ignore-unfixed: true
          
      - name: Post vulnerability report on PR
        if: steps.scan_blocker.outcome == 'failure' && github.event_name == 'pull_request'
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body-file: trivy-comment-report.txt
          edit-mode: replace

      - name: âœ… Scan and submit to GitHub Dependency Graph
        if: always()
        uses: aquasecurity/trivy-action@0.32.0
        with:
          scan-type: 'fs'
          scan-ref: '.'
          skip-dirs: 'examples' # Skips the examples folder
          format: 'github'
          exit-code: 0

      - name: Fail job if vulnerabilities were found
        if: steps.scan_blocker.outcome == 'failure'
        run: |
          echo "Failing the job due to critical or high severity vulnerabilities."
          exit 1
