name: Security Scan

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev

permissions:
  contents: write    
  security-events: write
  pull-requests: write

jobs:
  scan-fs:
    name: Scan Go Dependencies (FS)
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23.7"
          cache-dependency-path: go.sum

      - name: Download Go modules
        run: go mod download

      # This is the primary scan for your Go module vulnerabilities.
      # The `trivy-db-repository` flag ensures it downloads the latest vulnerability database.
      - name: ðŸ›‘ Scan for vulnerabilities (Blocker)
        id: scan_blocker
        uses: aquasecurity/trivy-action@0.32.0
        with:
          scan-type: 'fs'
          scan-ref: '.'
          skip-dirs: 'examples'
          format: 'sarif'
          output: 'trivy-fs-results.sarif'
          severity: 'CRITICAL,HIGH,MEDIUM,LOW,UNKNOWN'
          exit-code: 1
          ignore-unfixed: false
          # ADD THIS LINE to force a fresh DB download
          trivy-db-repository: 'ghcr.io/aquasecurity/trivy-db'
          continue-on-error: true

      - name: Generate report for PR comment
        if: steps.scan_blocker.outcome == 'failure'
        uses: aquasecurity/trivy-action@0.32.0
        with:
          scan-type: 'fs'
          scan-ref: '.'
          skip-dirs: 'examples'
          format: 'table'
          output: 'trivy-fs-comment-report.txt'
          severity: 'CRITICAL,HIGH,MEDIUM,LOW,UNKNOWN'
          exit-code: 0
          ignore-unfixed: false
          
      - name: Post vulnerability report on PR
        if: steps.scan_blocker.outcome == 'failure' && github.event_name == 'pull_request'
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body-file: trivy-fs-comment-report.txt
          edit-mode: replace
          unique-id-for-comment: fs-scan-results

      - name: âœ… Scan and submit to GitHub Dependency Graph
        if: always()
        uses: aquasecurity/trivy-action@0.32.0
        with:
          scan-type: 'fs'
          scan-ref: '.'
          skip-dirs: 'examples'
          format: 'github'
          exit-code: 0

      - name: Fail job if vulnerabilities were found
        if: steps.scan_blocker.outcome == 'failure'
        run: |
          echo "Failing the job due to filesystem vulnerabilities."
          exit 1

  # JOB 2: Image Scan
  scan-image:
    name: Scan Docker Images
    runs-on: ubuntu-24.04
    needs: scan-fs
    strategy:
      fail-fast: false
      matrix:
        arch: [amd64, arm64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up QEMU and Docker Buildx
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: |
          docker build --build-arg TARGETARCH=${{ matrix.arch }} \
            --platform linux/${{ matrix.arch }} \
            -t my-app-scan:${{ github.sha }}-${{ matrix.arch }} .

      # This scan checks the final image, including the Go standard library version.
      # The `trivy-db-repository` flag ensures it downloads the latest vulnerability database.
      - name: ðŸ›‘ Scan image for vulnerabilities (Blocker)
        id: image_scan_blocker
        uses: aquasecurity/trivy-action@0.32.0
        with:
          scan-type: 'image'
          image-ref: 'my-app-scan:${{ github.sha }}-${{ matrix.arch }}'
          format: 'sarif'
          output: 'trivy-image-results.sarif'
          severity: 'CRITICAL,HIGH,MEDIUM,LOW,UNKNOWN'
          exit-code: 1
          ignore-unfixed: false
          # ADD THIS LINE to force a fresh DB download
          trivy-db-repository: 'ghcr.io/aquasecurity/trivy-db'
          continue-on-error: true

      - name: Generate report for PR comment
        if: steps.image_scan_blocker.outcome == 'failure'
        uses: aquasecurity/trivy-action@0.32.0
        with:
          scan-type: 'image'
          image-ref: 'my-app-scan:${{ github.sha }}-${{ matrix.arch }}'
          format: 'table'
          output: 'trivy-image-comment-report.txt'
          severity: 'CRITICAL,HIGH,MEDIUM,LOW,UNKNOWN'
          exit-code: 0
          ignore-unfixed: false
      
      - name: Post vulnerability report on PR
        if: steps.image_scan_blocker.outcome == 'failure' && github.event_name == 'pull_request'
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body-file: 'trivy-image-comment-report.txt'
          edit-mode: replace
          unique-id-for-comment: image-scan-${{ matrix.arch }}
          
      - name: Fail job if vulnerabilities were found
        if: steps.image_scan_blocker.outcome == 'failure'
        run: |
          echo "Failing the job due to image vulnerabilities in ${{ matrix.arch }} build."
          exit 1
