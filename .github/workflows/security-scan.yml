name: Security Scan

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read
  pull-requests: write
  security-events: write

jobs:
  scan-fs:
    name: Scan Go Dependencies (FS)
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23"
          cache-dependency-path: go.sum

      - name: Download Go modules
        run: go mod download

      - name: Trivy cache cleanup
        run: trivy clean --all || true

      - name: Trivy FS Scan
        uses: aquasecurity/trivy-action@0.32.0
        id: trivy_fs
        with:
          scan-type: fs
          scan-ref: .
          vuln-type: library
          list-all-pkgs: true
          dependency-tree: true
          format: sarif
          output: trivy-fs.sarif
          severity: CRITICAL,HIGH
          ignore-unfixed: false
          exit-code: 1
        continue-on-error: true

      - name: Generate FS Table
        if: always()
        uses: aquasecurity/trivy-action@0.32.0
        with:
          scan-type: fs
          scan-ref: .
          vuln-type: library
          list-all-pkgs: true
          dependency-tree: true
          format: table
          output: trivy-fs.txt
          severity: CRITICAL,HIGH,MEDIUM,LOW
          ignore-unfixed: false
          exit-code: 0

      - name: Upload FS scan artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: fs-scan
          path: |
            trivy-fs.sarif
            trivy-fs.txt

  scan-image:
    name: Scan Docker Images
    runs-on: ubuntu-24.04
    needs: scan-fs
    strategy:
      fail-fast: false
      matrix:
        arch: [amd64, arm64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: |
          docker build --build-arg TARGETARCH=${{ matrix.arch }} \
            --platform linux/${{ matrix.arch }} \
            -t my-app-scan:${{ github.sha }}-${{ matrix.arch }} .

      - name: Trivy Image Scan
        uses: aquasecurity/trivy-action@0.32.0
        id: trivy_img
        with:
          scan-type: image
          image-ref: my-app-scan:${{ github.sha }}-${{ matrix.arch }}
          vuln-type: os,library
          list-all-pkgs: true
          dependency-tree: true
          format: sarif
          output: trivy-image-${{ matrix.arch }}.sarif
          severity: CRITICAL,HIGH
          ignore-unfixed: false
          exit-code: 1
        continue-on-error: true

      - name: Generate Image Table
        if: always()
        uses: aquasecurity/trivy-action@0.32.0
        with:
          scan-type: image
          image-ref: my-app-scan:${{ github.sha }}-${{ matrix.arch }}